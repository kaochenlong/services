#!/usr/bin/env ruby
print "Services:\n1. MongoDB\n2. PostgreSQL\n3. MySQL\n4. Redis\n5. ElasticSearch\n6. AnyCable (with Redis)\n\n請選擇："
service = gets.chomp

def is_m1?
  require "rbconfig"
  RbConfig::CONFIG['host_cpu'] == 'arm64'
end

case service
when "1" # MongoDB
  print "\n1. Database (Default)\n2. CLI\n\n請選擇："
  service_type = gets.chomp
  case service_type
  when "2"
    exec("docker-compose -f mongodb.yml run --rm mongo mongo mongodb://mongo")
  else
    exec("docker-compose -f mongodb.yml up --build; docker-compose -f mongodb.yml down --remove-orphans")
  end

when "2" # PostgreSQL
  print "\n1. Database (Default)\n2. Database with Adminer (Port: 8080)\n\n請選擇："
  service_type = gets.chomp
  case service_type
  when "2"
    exec("docker-compose -f pg_adminer.yml up --build; docker-compose -f pg_adminer.yml down --remove-orphans")
  else
    exec("docker-compose -f pg.yml up --build; docker-compose -f pg.yml down --remove-orphans")
  end

when "3" # MySQL
  if is_m1?
    exec("docker-compose -f mysql-m1.yml up --build; docker-compose -f mysql-m1.yml up down --remove-orphans")
  else
    exec("docker-compose -f mysql.yml up --build; docker-compose -f mysql.yml up down --remove-orphans")
  end

when "4" # Redis
  exec("docker-compose -f redis.yml up --build; docker-compose -f redis.yml down --remove-orphans")

when "5" # Elasticsearch
  exec("docker-compose -f elasticsearch.yml up --build; docker-compose -f elasticsearch.yml down --remove-orphans")

when "6" # AnyCable with Redis
  exec("docker-compose -f anycable.yml up --build; docker-compose -f anycable.yml down --remove-orphans")

else
  puts "無效的選項"
end

