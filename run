#!/bin/bash

# environments
export COMPOSE_IGNORE_ORPHANS=True

# utilities
function is_m1() {
  if [[ $(uname -m) == 'arm64' ]]; then
    return 1
  else
    return 0
  fi
}

# create volume folder if not exists
[ -d volumes ] || mkdir -p volumes/{elasticsearch,mongodb,mysql,postgresql,redis,portainer}

# check if external network exists?
if [[ "$(docker network ls | grep "service-external-network")" == "" ]] ; then
  docker network create "service-external-network" > /dev/null 2>&1
  printf "External service network created.\n\n"
fi

printf "Services:\n1. MongoDB\n2. PostgreSQL\n3. MySQL\n4. Redis\n5. ElasticSearch\n6. Portainer\n\n請選擇："

read service_name

case $service_name in

   1)
     # MongoDB
     docker-compose -f mongodb.yml up --build
   ;;

   2)
     # PostgreSQL
     printf "\n1. Database (Default)\n2. Database with Adminer (Port: 8080)\n\n請選擇："
     read service_type

     case $service_type in
       2)
         docker-compose -f pg_adminer.yml up --build
       ;;

       *)
         docker-compose -f pg.yml up --build
       ;;
     esac
   ;;

   3)
     # MySQL
     is_m1
     if [ $? == 1 ]
     then
       docker-compose -f mysql-m1.yml up --build
     else
       docker-compose -f mysql.yml up --build
     fi
   ;;

   4)
     # Redis
     docker-compose -f redis.yml up --build
   ;;

   5)
     # Elasticsearch
     docker-compose -f elasticsearch.yml up --build
   ;;

   6)
     # Portainer
     docker-compose -f portainer.yml up --build
   ;;

   *)
     printf "無效的選項\n"
   ;;
esac

exit 0
